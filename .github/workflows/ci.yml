name: CI

on:
  pull_request:
    branches:
    - '*'
  push:
    branches:
    - main

defaults:
  run:
    shell: bash

env:
  RUSTFLAGS: --deny warnings

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - uses: Swatinem/rust-cache@v2

    - name: Clippy
      run: cd src && cargo clippy --all --all-targets

    - name: Clippy Components
      run: cd src_components && cargo clippy --all --all-targets

    - name: Format
      run: cd src && cargo fmt --all -- --check

    - name: Format Components
      run: cd src_components && cargo fmt --all -- --check
 
    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install ripgrep shellcheck

    - name: Check for Forbidden Words
      run: ./ci/forbid.sh

    - name: Check Install Script
      run: shellcheck ci/install.sh

  msrv:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: 1.85

    - uses: Swatinem/rust-cache@v2

    - name: Check
      run: cd src && cargo check

  test:
    strategy:
      matrix:
        os:
        - ubuntu-latest
        - macos-latest

    runs-on: ${{matrix.os}}

    steps:
    - uses: actions/checkout@v4

    - uses: Swatinem/rust-cache@v2

    - name: Install Cargo Dependencies
      run: cargo install just cargo-nextest

    - name: Install WASI Preview 2
      run: rustup target add wasm32-wasip2

    - name: Install Linux Dependencies
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: |
        sudo apt-get update
        sudo apt-get install libsixel-bin

    # macOS bits needed by libsixelâ€™s ./configure script + a working dylib
    - name: Install deps for sixel
      if: ${{ matrix.os == 'macos-latest' }}
      run: |
        brew update
        brew install autoconf automake libtool pkg-config libsixel
        # make Cargo see the Homebrew dylib
        echo "RUSTFLAGS=-L$(brew --prefix libsixel)/lib" >> $GITHUB_ENV
        echo "DYLD_FALLBACK_LIBRARY_PATH=$(brew --prefix libsixel)/lib" >> $GITHUB_ENV

    - name: Test
      run: just test

    - name: Test install.sh
      run: |
        bash ci/install.sh --to /tmp
        /tmp/slipway --version
