name: Release

on:
  push:
    tags:
    - '*'

defaults:
  run:
    shell: bash

env:
  RUSTFLAGS: --deny warnings

jobs:
  prerelease:
    runs-on: ubuntu-latest

    outputs:
      value: ${{ steps.prerelease.outputs.value }}

    steps:
    - name: Prerelease Check
      id: prerelease
      run: |
        if [[ ${{ github.ref_name }} =~ ^[0-9]+[.][0-9]+[.][0-9]+$ ]]; then
            echo value=false >> $GITHUB_OUTPUT
        else
            echo value=true >> $GITHUB_OUTPUT
        fi

  package:
    strategy:
      matrix:
        target:
        - aarch64-apple-darwin
        - aarch64-unknown-linux-musl
        - arm-unknown-linux-musleabihf
        - armv7-unknown-linux-musleabihf
        - x86_64-apple-darwin
        - x86_64-unknown-linux-musl
        include:
        - target: aarch64-apple-darwin
          os: macos-latest
          target_rustflags: ''
        - target: aarch64-unknown-linux-musl
          os: ubuntu-latest
          target_rustflags: '--codegen linker=aarch64-linux-gnu-gcc'
        - target: arm-unknown-linux-musleabihf
          os: ubuntu-latest
          target_rustflags: '--codegen linker=arm-linux-gnueabihf-gcc'
        - target: armv7-unknown-linux-musleabihf
          os: ubuntu-latest
          target_rustflags: '--codegen linker=arm-linux-gnueabihf-gcc'
        - target: x86_64-apple-darwin
          os: macos-latest
          target_rustflags: ''
        - target: x86_64-unknown-linux-musl
          os: ubuntu-latest
          target_rustflags: ''

    runs-on: ${{matrix.os}}

    needs:
    - prerelease

    steps:
    - uses: actions/checkout@v4

    - name: Install Linux Dependencies
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: |
        sudo apt-get update
        sudo apt-get install libsixel-bin fontconfig

    # macOS bits needed by libsixelâ€™s ./configure script + a working dylib
    - name: Install deps for sixel
      if: ${{ matrix.os == 'macos-latest' }}
      run: |
        brew update
        brew install autoconf automake libtool pkg-config libsixel
        # make Cargo see the Homebrew dylib
        echo "RUSTFLAGS=-L$(brew --prefix libsixel)/lib" >> $GITHUB_ENV
        echo "DYLD_FALLBACK_LIBRARY_PATH=$(brew --prefix libsixel)/lib" >> $GITHUB_ENV

    - name: Install AArch64 Toolchain
      if: ${{ matrix.target == 'aarch64-unknown-linux-musl' }}
      run: |
        sudo apt-get update
        sudo apt-get install gcc-aarch64-linux-gnu libc6-dev-i386

    - name: Install ARM Toolchain
      if: ${{ matrix.target == 'arm-unknown-linux-musleabihf' || matrix.target == 'armv7-unknown-linux-musleabihf' }}
      run: |
        sudo apt-get update
        sudo apt-get install gcc-arm-linux-gnueabihf

    - name: Package
      id: package
      env:
        TARGET: ${{ matrix.target }}
        REF: ${{ github.ref }}
        OS: ${{ matrix.os }}
        TARGET_RUSTFLAGS: ${{ matrix.target_rustflags }}
      run: ./ci/package.sh
      shell: bash

    - name: Publish Archive
      uses: softprops/action-gh-release@v2.2.1
      if: ${{ startsWith(github.ref, 'refs/tags/') }}
      with:
        draft: false
        files: ${{ steps.package.outputs.archive }}
        prerelease: ${{ needs.prerelease.outputs.value }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish Changelog and Scripts
      uses: softprops/action-gh-release@v2.2.1
      if: >-
        ${{
          startsWith(github.ref, 'refs/tags/')
          && matrix.target == 'aarch64-unknown-linux-musl'
        }}
      with:
        draft: false
        files: |
          CHANGELOG.md
          ci/install.sh
        prerelease: ${{ needs.prerelease.outputs.value }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  checksum:
    runs-on: ubuntu-latest

    needs:
    - package
    - prerelease

    steps:
    - name: Download Release Archives
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: >-
        gh release download
        --repo slipwayhq/slipway
        --pattern '*'
        --dir release
        ${{ github.ref_name }}

    - name: Create Checksums
      run: |
        cd release
        shasum -a 256 * > ../SHA256SUMS

    - name: Publish Checksums
      uses: softprops/action-gh-release@v2.2.1
      with:
        draft: false
        files: SHA256SUMS
        prerelease: ${{ needs.prerelease.outputs.value }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
